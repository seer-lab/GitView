#POSSIBLE_SIZES=(1.0) # 0.2 0.3 0.4 0.5
QUARTERS_DATA=(5) #1 2 3 2340
#QUARTERS=(1 2 3)

TEST_NUMBER=(2)

OWNER=koush
REPO=ion
#$(date +"%m%d%Y_%H%M")_

WIDTH=(90)

GET_DATA=$1

experiment_number=3
method=svm

feature_set=(2 3 4 5)
use_os=0

size=1.0

for run in ${TEST_NUMBER[@]}; do
    
    for quart in ${QUARTERS_DATA[@]}; do

        for width in ${WIDTH[@]}; do
            for set in ${feature_set[@]}; do

                CUR_TYPE=test-"${experiment_number}"_${size}_${set}
                folder=evaluation/test-"${experiment_number}"/"${REPO}"/"${method}"/width_"${width}"/"${set}"/"${CUR_TYPE}"/"${CUR_TYPE}"_r"${run}"

                if [ $? -eq 1 ]; then
                    break
                fi

                OUTPUT_FILE="${folder}"/test_${size}_q${quart}_${end_q}

                if [ -e "${OUTPUT_FILE}" ]; then
                    echo "An output file already exists, do you want to proceed and overwrite?"
                    read answer

                    if [ $answer != 'yes' ]; then
                        # Skip
                        echo "Skipping"
                        continue
                    fi
                fi

                measure_outputs=meaures/test_"${experiment_number}"/"${method}"/"${REPO}"

                time_records="${measure_outputs}"/times/"${set}"

                mkdir -p "${measure_outputs}"

                mkdir -p "${time_records}"

                performance_output="${measure_outputs}"/data.csv
                
                head_name="${set}"

                # TODO Fix this for experiments 2 and 3
                echo -n "${head_name}, " >> "${performance_output}"

                mkdir -p "${folder}"

                if [[ $GET_DATA -eq 1 ]]; then
                    echo "Collecting data for q${quart} ${size}"
                    /usr/bin/time -o "${time_records}"/"${width}"_data_collection -p ruby get_data.rb ${OWNER} ${REPO} ${size} ${width} "${set}" "${use_os}" ${quart} | tee "${OUTPUT_FILE}"
                else
                    echo | tee "${OUTPUT_FILE}"
                fi

                if [ $method = 'svm' ]; then
                    echo "Running q${quart} ${size}"
                    /usr/bin/time -o "${time_records}"/"${width}"_prediction -p ruby svm_test.rb ${OWNER} ${REPO} ${size} ${width} "${performance_output}" ${quart} 2>&1 | tee -a "${OUTPUT_FILE}"
                elif [ $method = 'rf' ]; then

                    importance_output="${measure_outputs}"/importance.csv
                    echo -n "${head_name}, " >> "${importance_output}"

                    /usr/bin/time -o "${time_records}"/"${width}"_prediction -p python random_forest.py "data/train_data_sample_${OWNER}_${REPO}_${size}_${width}_${width}_${quart}" "data/test_data_sample_${OWNER}_${REPO}_${size}_${width}_${width}_${quart}" "${performance_output}" "${importance_output}" | tee -a "${OUTPUT_FILE}"
                fi
            done
        done

    done
done
